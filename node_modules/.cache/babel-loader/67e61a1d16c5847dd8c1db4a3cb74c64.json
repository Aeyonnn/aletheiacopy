{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar actions = require('./actions.js');\n\nvar Actor = require('./Actor.js');\n\nvar utils = require('./utils.js');\n/**\r\n * Returns an actor behavior from a reducer and its initial state.\r\n *\r\n * @param transition The pure reducer that returns the next state given the current state and event.\r\n * @param initialState The initial state of the reducer.\r\n * @returns An actor behavior\r\n */\n\n\nfunction fromReducer(transition, initialState) {\n  return {\n    transition: transition,\n    initialState: initialState\n  };\n}\n\nfunction fromPromise(promiseFn) {\n  var initialState = {\n    error: undefined,\n    data: undefined,\n    status: 'pending'\n  };\n  return {\n    transition: function (state, event, _a) {\n      var parent = _a.parent,\n          id = _a.id,\n          observers = _a.observers;\n\n      switch (event.type) {\n        case 'fulfill':\n          parent === null || parent === void 0 ? void 0 : parent.send(actions.doneInvoke(id, event.data));\n          return {\n            error: undefined,\n            data: event.data,\n            status: 'fulfilled'\n          };\n\n        case 'reject':\n          parent === null || parent === void 0 ? void 0 : parent.send(actions.error(id, event.error));\n          observers.forEach(function (observer) {\n            observer.error(event.error);\n          });\n          return {\n            error: event.error,\n            data: undefined,\n            status: 'rejected'\n          };\n\n        default:\n          return state;\n      }\n    },\n    initialState: initialState,\n    start: function (_a) {\n      var self = _a.self;\n      promiseFn().then(function (data) {\n        self.send({\n          type: 'fulfill',\n          data: data\n        });\n      }, function (reason) {\n        self.send({\n          type: 'reject',\n          error: reason\n        });\n      });\n      return initialState;\n    }\n  };\n}\n\nfunction spawnBehavior(behavior, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var state = behavior.initialState;\n  var observers = new Set();\n  var mailbox = [];\n  var flushing = false;\n\n  var flush = function () {\n    if (flushing) {\n      return;\n    }\n\n    flushing = true;\n\n    while (mailbox.length > 0) {\n      var event_1 = mailbox.shift();\n      state = behavior.transition(state, event_1, actorCtx);\n      observers.forEach(function (observer) {\n        return observer.next(state);\n      });\n    }\n\n    flushing = false;\n  };\n\n  var actor = Actor.toActorRef({\n    id: options.id,\n    send: function (event) {\n      mailbox.push(event);\n      flush();\n    },\n    getSnapshot: function () {\n      return state;\n    },\n    subscribe: function (next, handleError, complete) {\n      var observer = utils.toObserver(next, handleError, complete);\n      observers.add(observer);\n      observer.next(state);\n      return {\n        unsubscribe: function () {\n          observers.delete(observer);\n        }\n      };\n    }\n  });\n  var actorCtx = {\n    parent: options.parent,\n    self: actor,\n    id: options.id || 'anonymous',\n    observers: observers\n  };\n  state = behavior.start ? behavior.start(actorCtx) : state;\n  return actor;\n}\n\nexports.fromPromise = fromPromise;\nexports.fromReducer = fromReducer;\nexports.spawnBehavior = spawnBehavior;","map":{"version":3,"sources":["C:/Users/Elnathan/node_modules/xstate/lib/behaviors.js"],"names":["Object","defineProperty","exports","value","actions","require","Actor","utils","fromReducer","transition","initialState","fromPromise","promiseFn","error","undefined","data","status","state","event","_a","parent","id","observers","type","send","doneInvoke","forEach","observer","start","self","then","reason","spawnBehavior","behavior","options","Set","mailbox","flushing","flush","length","event_1","shift","actorCtx","next","actor","toActorRef","push","getSnapshot","subscribe","handleError","complete","toObserver","add","unsubscribe","delete"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar actions = require('./actions.js');\nvar Actor = require('./Actor.js');\nvar utils = require('./utils.js');\n\n/**\r\n * Returns an actor behavior from a reducer and its initial state.\r\n *\r\n * @param transition The pure reducer that returns the next state given the current state and event.\r\n * @param initialState The initial state of the reducer.\r\n * @returns An actor behavior\r\n */\n\nfunction fromReducer(transition, initialState) {\n  return {\n    transition: transition,\n    initialState: initialState\n  };\n}\nfunction fromPromise(promiseFn) {\n  var initialState = {\n    error: undefined,\n    data: undefined,\n    status: 'pending'\n  };\n  return {\n    transition: function (state, event, _a) {\n      var parent = _a.parent,\n          id = _a.id,\n          observers = _a.observers;\n\n      switch (event.type) {\n        case 'fulfill':\n          parent === null || parent === void 0 ? void 0 : parent.send(actions.doneInvoke(id, event.data));\n          return {\n            error: undefined,\n            data: event.data,\n            status: 'fulfilled'\n          };\n\n        case 'reject':\n          parent === null || parent === void 0 ? void 0 : parent.send(actions.error(id, event.error));\n          observers.forEach(function (observer) {\n            observer.error(event.error);\n          });\n          return {\n            error: event.error,\n            data: undefined,\n            status: 'rejected'\n          };\n\n        default:\n          return state;\n      }\n    },\n    initialState: initialState,\n    start: function (_a) {\n      var self = _a.self;\n      promiseFn().then(function (data) {\n        self.send({\n          type: 'fulfill',\n          data: data\n        });\n      }, function (reason) {\n        self.send({\n          type: 'reject',\n          error: reason\n        });\n      });\n      return initialState;\n    }\n  };\n}\nfunction spawnBehavior(behavior, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var state = behavior.initialState;\n  var observers = new Set();\n  var mailbox = [];\n  var flushing = false;\n\n  var flush = function () {\n    if (flushing) {\n      return;\n    }\n\n    flushing = true;\n\n    while (mailbox.length > 0) {\n      var event_1 = mailbox.shift();\n      state = behavior.transition(state, event_1, actorCtx);\n      observers.forEach(function (observer) {\n        return observer.next(state);\n      });\n    }\n\n    flushing = false;\n  };\n\n  var actor = Actor.toActorRef({\n    id: options.id,\n    send: function (event) {\n      mailbox.push(event);\n      flush();\n    },\n    getSnapshot: function () {\n      return state;\n    },\n    subscribe: function (next, handleError, complete) {\n      var observer = utils.toObserver(next, handleError, complete);\n      observers.add(observer);\n      observer.next(state);\n      return {\n        unsubscribe: function () {\n          observers.delete(observer);\n        }\n      };\n    }\n  });\n  var actorCtx = {\n    parent: options.parent,\n    self: actor,\n    id: options.id || 'anonymous',\n    observers: observers\n  };\n  state = behavior.start ? behavior.start(actorCtx) : state;\n  return actor;\n}\n\nexports.fromPromise = fromPromise;\nexports.fromReducer = fromReducer;\nexports.spawnBehavior = spawnBehavior;\n"]},"metadata":{},"sourceType":"script"}