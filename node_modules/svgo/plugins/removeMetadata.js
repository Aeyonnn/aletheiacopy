'use strict';

<<<<<<< HEAD
const { detachNodeFromParent } = require('../lib/xast.js');

exports.name = 'removeMetadata';
exports.type = 'visitor';
exports.active = true;
=======
exports.type = 'perItem';

exports.active = true;

>>>>>>> d9d57759386cbc64761f26a577729c9da898f4b0
exports.description = 'removes <metadata>';

/**
 * Remove <metadata>.
 *
<<<<<<< HEAD
 * https://www.w3.org/TR/SVG11/metadata.html
 *
 * @author Kir Belevich
 *
 * @type {import('../lib/types').Plugin<void>}
 */
exports.fn = () => {
  return {
    element: {
      enter: (node, parentNode) => {
        if (node.name === 'metadata') {
          detachNodeFromParent(node, parentNode);
        }
      },
    },
  };
=======
 * http://www.w3.org/TR/SVG/metadata.html
 *
 * @param {Object} item current iteration item
 * @return {Boolean} if false, item will be filtered out
 *
 * @author Kir Belevich
 */
exports.fn = function(item) {

    return !item.isElem('metadata');

>>>>>>> d9d57759386cbc64761f26a577729c9da898f4b0
};
