<<<<<<< HEAD
'use strict';
=======
"use strict";
>>>>>>> d9d57759386cbc64761f26a577729c9da898f4b0

Object.defineProperty(exports, "__esModule", {
  value: true
});
<<<<<<< HEAD

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _utilities = require('./../utilities');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var schema = [];

var create = (0, _utilities.iterateFunctionNodes)(function (context) {
  return function (functionNode) {
    _lodash2.default.forEach(functionNode.params, function (identifierNode) {
      var nodeType = _lodash2.default.get(identifierNode, 'type');
      var isAssignmentPattern = nodeType === 'AssignmentPattern';
      var hasTypeAnnotation = Boolean(_lodash2.default.get(identifierNode, 'typeAnnotation'));
      var leftAnnotated = Boolean(_lodash2.default.get(identifierNode, 'left.typeAnnotation'));
=======
exports.default = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

var _utilities = require("../utilities");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const schema = [];
const create = (0, _utilities.iterateFunctionNodes)(context => {
  return functionNode => {
    for (const identifierNode of functionNode.params) {
      const nodeType = _lodash.default.get(identifierNode, 'type');

      const isAssignmentPattern = nodeType === 'AssignmentPattern';
      const hasTypeAnnotation = Boolean(_lodash.default.get(identifierNode, 'typeAnnotation'));
      const leftAnnotated = Boolean(_lodash.default.get(identifierNode, 'left.typeAnnotation'));
>>>>>>> d9d57759386cbc64761f26a577729c9da898f4b0

      if (isAssignmentPattern && hasTypeAnnotation && !leftAnnotated) {
        context.report({
          data: {
            name: (0, _utilities.quoteName)((0, _utilities.getParameterName)(identifierNode, context))
          },
          message: '{{name}}parameter type annotation must be placed on left-hand side of assignment.',
          node: identifierNode
        });
      }
<<<<<<< HEAD
    });
  };
});

exports.default = {
=======
    }
  };
});
var _default = {
>>>>>>> d9d57759386cbc64761f26a577729c9da898f4b0
  create,
  meta: {
    deprecated: true
  },
  schema
};
<<<<<<< HEAD
module.exports = exports['default'];
=======
exports.default = _default;
module.exports = exports.default;
>>>>>>> d9d57759386cbc64761f26a577729c9da898f4b0
